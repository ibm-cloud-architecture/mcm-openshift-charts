{{- if .Values.klusterlet.enabled }}
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: {{ template "ibm-mcm.fullname" . }}-klusterlet
  labels:
    app: {{ template "ibm-mcm.name" . }}
    chart: {{ template "ibm-mcm.chart" . }}
    component: "klusterlet"
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "ibm-mcm.name" . }}
      component: "klusterlet"
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "ibm-mcm.name" . }}
        component: "klusterlet"
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
        chart: {{ template "ibm-mcm.chart" . }}
      annotations:
        productName: "IBM Multi-cloud Manager"
        productID: "317a72a4f22645aaa1b7a07a83c60af5"
        productVersion: "3.1.0"
    spec:
      containers:
      - name: work-manager
        image: "{{ .Values.klusterlet.repository }}:{{ .Values.klusterlet.tag }}"
        imagePullPolicy: {{ .Values.klusterlet.pullPolicy }}
        {{- if .Values.klusterlet.httpsProxy }}
        env:
        - name: https_proxy
          value: {{ .Values.klusterlet.httpsProxy }}
        {{- end }}
        args:
          - "/klusterlet"
        {{- if .Values.klusterlet.apiserverConfig.server }}
        {{- if .Values.klusterlet.apiserverConfig.enableBootstrap }}
          - "--bootstrap-controller-config-file=/var/run/bootstrap-klusterlet/config"
          - "--client-cert-secret={{ .Release.Namespace }}/{{ template "ibm-mcm.fullname" . }}-klusterlet-cert"
        {{- end }}
          - "--controller-config-file=/var/run/klusterlet/config"
        {{- end }}
          - "--cluster-name={{ .Values.klusterlet.clusterName }}"
          - "--cluster-namespace={{ .Values.klusterlet.clusterNamespace }}"
          - "--cluster-labels={{ if .Values.klusterlet.cloud}}cloud={{.Values.klusterlet.cloud}}{{ end }},{{ if .Values.klusterlet.vendor}}vendor={{.Values.klusterlet.vendor}}{{ end }},{{ if .Values.klusterlet.environment}}environment={{.Values.klusterlet.environment}}{{ end }},{{ if .Values.klusterlet.region}}region={{.Values.klusterlet.region}}{{ end }},{{ if .Values.klusterlet.datacenter}}datacenter={{.Values.klusterlet.datacenter}}{{ end }},{{ if .Values.klusterlet.owner}}owner={{.Values.klusterlet.owner}}{{ end }}"
        {{- if or .Values.klusterlet.tillersecret .Values.klusterlet.autoGenTillerSecret }}
          - "--tiller-cert=/etc/helm/tls.crt"
          - "--tiller-key=/etc/helm/tls.key"
        {{- end }}
        {{- if .Values.topology.enabled }}
          - "--weave-host=https://{{ template "ibm-mcm.fullname" . }}-weave-scope.{{ .Release.Namespace }}.svc.cluster.local:443"
          - "--weave-interval={{ .Values.topology.updateInterval }}"
        {{- if .Values.topology.enableAuth }}
          - "--weave-user={{ .Values.topology.username }}"
          - "--weave-password={{ .Values.topology.password }}"
        {{- end }}
        {{- if .Values.klusterlet.prometheusAddress }}
          - "--prometheus-address={{ .Values.klusterlet.prometheusAddress }}"
        {{- end }}
        {{- if .Values.klusterlet.prometheusPort }}
          - "--prometheus-port={{ .Values.klusterlet.prometheusPort }}"
        {{- end }}
        {{- end }}
        livenessProbe:
           exec:
             command:
             - "/bin/sh"
             args:
             - ["-c", "ps -ef | grep '[k]lusterlet'"]
           initialDelaySeconds: 5
           periodSeconds: 5
        volumeMounts:
        {{- if .Values.klusterlet.apiserverConfig.server }}
        {{- if .Values.klusterlet.apiserverConfig.enableBootstrap }}
          - name: klusterlet-config
            mountPath: /var/run/bootstrap-klusterlet
        {{- else }}
          - name: klusterlet-config
            mountPath: /var/run/klusterlet
        {{- end }}
        {{- end }}
        {{ if .Values.topology.enabled }}
          - name: weavescope-ca-secret
            mountPath: "/opt/ibm/router/client-certs"
        {{- end }}            
        {{- if or .Values.klusterlet.tillersecret .Values.klusterlet.autoGenTillerSecret }}
          - name: tiller-secret
            mountPath: /etc/helm
        {{- end }}
      # Compliance controllers
      {{- if .Values.compliance.enabled }}
      - name: policy-controller
        image: "{{ .Values.compliance.repository }}:{{ .Values.compliance.tag }}"
        imagePullPolicy: "{{ .Values.compliance.pullPolicy }}"
        {{- if .Values.klusterlet.httpsProxy }}
        env:
        - name: https_proxy
          value: {{ .Values.klusterlet.httpsProxy }}
        {{- end }}
        command: ["policy-controller"]
        args: ["-logtostderr=true","-v={{ .Values.logLevel }}"]
        livenessProbe:
           exec:
             command:
             - "/bin/sh"
             args:
             - ["-c", "ps -ef | grep '[p]olicy-controller'"]
           initialDelaySeconds: 5
           periodSeconds: 5
      - name: compliance-controller
        image: "{{ .Values.compliance.repository }}:{{ .Values.compliance.tag }}"
        imagePullPolicy: "{{ .Values.compliance.pullPolicy }}"
        {{- if .Values.klusterlet.httpsProxy }}
        env:
        - name: https_proxy
          value: {{ .Values.klusterlet.httpsProxy }}
        {{- end }}
        command: ["compliance-controller"]
        args:
          - "--watch-ns={{ .Values.klusterlet.clusterNamespace }}"
          - "--cluster-name={{ .Values.klusterlet.clusterName }}"
          - "-logtostderr=true"
          - "-v={{ .Values.logLevel }}"
        livenessProbe:
           exec:
             command:
             - "/bin/sh"
             args:
             - ["-c", "ps -ef | grep '[c]ompliance-controller'"]
           initialDelaySeconds: 5
           periodSeconds: 5
      # the sync controller must not be used if deploying the klusterlet in the HCM master
      {{- if not (.Values.klusterlet.deployedOnHub) }}
      - name: sync-controller
        image: "{{ .Values.compliance.repository }}:{{ .Values.compliance.tag }}"
        imagePullPolicy: "{{ .Values.compliance.pullPolicy }}"
        {{- if .Values.klusterlet.httpsProxy }}
        env:
        - name: https_proxy
          value: {{ .Values.klusterlet.httpsProxy }}
        {{- end }}
        command: ["sync-controller"]
        args:
          - "--remote-kubeconfig=/var/run/klusterlet/config"
          - "--watch-ns={{ .Values.klusterlet.clusterNamespace }}"
          - "--klusterlet-ns={{ .Release.Namespace }}"
          {{- if .Values.klusterlet.apiserverConfig.enableBootstrap }}
          - "--cert-secret-name={{ template "ibm-mcm.fullname" . }}-klusterlet-cert"
          {{- end }}
          - "-logtostderr=true"
          - "-v={{ .Values.logLevel }}"
        livenessProbe:
           exec:
             command:
             - "/bin/sh"
             args:
             - ["-c", "ps -ef | grep '[s]ync-controller'"]
           initialDelaySeconds: 5
           periodSeconds: 5
        volumeMounts:
          {{- if .Values.klusterlet.apiserverConfig.server }}
          - name: klusterlet-config
            mountPath: /var/run/klusterlet
          {{- end }}
      {{- end }}
      {{- end }}
      volumes:
      {{ if .Values.topology.enabled }}
        - name: weavescope-ca-secret
          secret:
            secretName: {{ template "ibm-mcm.fullname" . }}-weavescope-client-secrets
      {{- end }}      
      {{- if .Values.klusterlet.apiserverConfig.server }}
        - name: klusterlet-config
          secret:
            secretName: {{ template "ibm-mcm.fullname" . }}-klusterlet
      {{- end }}
      {{- if .Values.klusterlet.tillersecret }}
        - name: tiller-secret
          secret:
            secretName: {{ .Values.klusterlet.tillersecret }}
      {{- else if .Values.klusterlet.autoGenTillerSecret}}
        - name: tiller-secret
          secret:
            secretName: {{ template "ibm-mcm.fullname" . }}-tiller-client-certs
      {{- end }}
      {{- if .Values.pullSecret.token }}
      imagePullSecrets:
      - name: "{{ template "ibm-mcm.fullname" . }}-regcred"
      {{- end }}
      {{- if .Values.nodeSelector.enabled }}
      nodeSelector:
      {{- if .Values.nodeSelector.arch }}
        "beta.kubernetes.io/arch" : {{ .Values.nodeSelector.arch }}  
      {{- end }}
      {{- if .Values.nodeSelector.os }}
        "beta.kubernetes.io/os" : {{ .Values.nodeSelector.os }}
      {{- end }}
      {{- if .Values.nodeSelector.customLabelSelector }}
        {{ .Values.nodeSelector.customLabelSelector }} : {{ .Values.nodeSelector.customLabelValue}}
      {{- end }}
      {{- end }}
{{- end }}
