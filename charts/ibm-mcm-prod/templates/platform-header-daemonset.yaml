{{- if .Values.console.header.enabled }}
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  labels:
    release: platform-header
  name: platform-header
  namespace: kube-system
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: platform-header
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        k8s-app: platform-header
    spec:
      containers:
      - env:
        - name: cfcRouterUrl
          value: https://icp-management-ingress:8443
        - name: NODE_EXTRA_CA_CERTS
          value: /opt/ibm/platform-header/certs/ca.crt
        - name: PLATFORM_IDENTITY_PROVIDER_URL
          value: https://icp-management-ingress:8443/idprovider
        - name: PLATFORM_AUTH_SERVICE_URL
          value: https://icp-management-ingress:8443/idauth
        - name: NAV_PORT
          value: "8443"
        - name: OAUTH2_CLIENT_REGISTRATION_SECRET
          valueFrom:
            secretKeyRef:
              key: OAUTH2_CLIENT_REGISTRATION_SECRET
              name: platform-oidc-credentials
        - name: ICP_VERSION
          value: 3.1.0
        - name: default_admin_user
          value: {{ .Values.console.header.defaultAdminUser }}
        - name: WLP_CLIENT_ID
          valueFrom:
            secretKeyRef:
              key: WLP_CLIENT_ID
              name: platform-oidc-credentials
        - name: WLP_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              key: WLP_CLIENT_SECRET
              name: platform-oidc-credentials
        image: {{ .Values.console.header.image.repository }}:{{ .Values.console.header.image.tag }}
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /livenessProbe
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 1
        name: platform-header
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readinessProbe
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 300m
            memory: 256Mi
          requests:
            cpu: 300m
            memory: 256Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/config
          name: log4js
        - mountPath: /opt/ibm/platform-header/certs
          name: cluster-ca
      {{- if .Values.pullSecret.token }}
      imagePullSecrets:
      - name: "{{ template "ibm-mcm.fullname" . }}-regcred"
      {{- end }}
      dnsPolicy: ClusterFirst
      nodeSelector:
        master: "true"
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 60
      tolerations:
      - effect: NoSchedule
        key: dedicated
        operator: Exists
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - configMap:
          defaultMode: 420
          items:
          - key: log4js.json
            path: log4js.json
          name: platform-ui-log4js
        name: log4js
      - name: cluster-ca
        secret:
          defaultMode: 420
          items:
          - key: tls.key
            path: ca.key
          - key: tls.crt
            path: ca.crt
          secretName: cluster-ca-cert
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
{{- end }}